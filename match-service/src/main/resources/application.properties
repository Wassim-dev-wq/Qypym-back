spring.application.name=match-service
spring.profiles.active=dev
spring.config.import=optional:configserver:http://config-server:8888
server.port=9091

# Database Configuration
#spring.datasource.url=jdbc:postgresql://fivy-match-db:5432/fivy_matches
spring.datasource.url=jdbc:postgresql://localhost:5436/fivy_matches
spring.datasource.username=fivy_match
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver


# Hikari Connection Pool
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.pool-name=UserServiceHikariPool

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Kafka Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP-ID:match-service}
spring.kafka.producer.key-serializer=${SPRING_KAFKA_PRODUCER_KEY-SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
spring.kafka.producer.value-serializer=${SPRING_KAFKA_PRODUCER_VALUE-SERIALIZER:org.springframework.kafka.support.serializer.JsonSerializer}
spring.kafka.producer.acks=${SPRING_KAFKA_PRODUCER_ACKS:all}
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.retries=3
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.batch.size=16384
spring.kafka.producer.properties.linger.ms=5
spring.kafka.producer.properties.compression.type=snappy
spring.kafka.producer.properties.spring.json.type.mapping=org.fivy.matchservice.domain.event.MatchEvent:MatchEvent
spring.kafka.producer.properties.spring.json.trusted.packages=org.fivy.userservice.domain.event
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.retries=3
spring.kafka.admin.auto-create=true
spring.kafka.admin.properties.cleanup.policy=delete
spring.kafka.admin.properties.retention.ms=604800000

# Redis Configuration
spring.data.redis.host=${SPRING_REDIS_HOST:redis}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}
spring.data.redis.password=${SPRING_REDIS_PASSWORD:password}
spring.data.redis.timeout=2000
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.lettuce.pool.max-wait=-1ms

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# Logging Configuration
logging.level.org.fivy.userservice=DEBUG

# Management Endpoints
management.endpoints.web.exposure.include=health,info
management.metrics.enable.hikaricp=true

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.userService.sliding-window-size=10
resilience4j.circuitbreaker.instances.userService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.userService.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.userService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.userService.register-health-indicator=true
spring.application.name=user-service
server.port=${USER_SERVICE_PORT:${USER_SERVICE_CONTAINER_PORT:9090}}

spring.datasource.url=jdbc:postgresql://${USER_DB_HOST:db-user-dev}:${USER_DB_CONTAINER_PORT:5432}/${POSTGRES_DB:user_db}
spring.datasource.username=${POSTGRES_USER:admin}
spring.datasource.password=${POSTGRES_PASSWORD:admin}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.initialization-fail-timeout=60000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.pool-name=UserServiceHikariPool
spring.config.import=${SPRING_CONFIG_IMPORT:optional:configserver:http://config-server:8888}

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

eureka.client.serviceUrl.defaultZone=${SERVICE_REGISTRY_DEFAULTZONE:http://srv-registry-${ENV:dev}:${SERVICE_REGISTRY_CONTAINER_PORT:8761}/eureka}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.health-check-url-path=/actuator/health

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:mq-kafka-dev:29092}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID:user-service}
spring.kafka.producer.acks=${SPRING_KAFKA_PRODUCER_ACKS:all}
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.retries=3
spring.kafka.producer.properties.retry.backoff.ms=1000
spring.kafka.producer.properties.batch.size=16384
spring.kafka.producer.properties.linger.ms=5
spring.kafka.producer.properties.compression.type=snappy
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.retries=3
spring.kafka.admin.auto-create=true
spring.kafka.admin.properties.cleanup.policy=delete
spring.kafka.admin.properties.retention.ms=604800000

spring.data.redis.host=${SPRING_REDIS_HOST:cache-redis-dev}
spring.data.redis.port=${REDIS_CONTAINER_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:admin}
spring.data.redis.timeout=2000
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.lettuce.pool.max-wait=-1ms

spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

keycloak.client-id=${KEYCLOAK_CLIENT_ID}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI}
keycloak.auth-server-url=${KEYCLOAK_AUTH_SERVER_URL}

logging.level.org.fivy.userservice=DEBUG